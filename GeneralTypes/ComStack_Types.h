/**********************************************************************************
***********************************************************************************
**														  						 **		
**	FILENAME	:	ComStack_Types.h                  						     **
**	                                                      						 **
**	VERSION		: 	1.0.0                                 						 **
**                                                        						 **
**	DATE		:	2021-4-2                             						 **
**                                                        						 **
**	PLATFORM	:	TIVA C      		                  						 **
**																				 **
**  VARIANT  	: 	NA                                                           **
**                                                        						 **
**	AUTHOR		:  	MohamedSayed                          						 **
**                                                        						 **
**	VENDOR		: 	NA				                     						 **
**                                                        						 **
**	                                                      						 **
**	DESCRIPTION : Commmunication stack General Types Header File.     			 **
**                                                                               **
**	SPECIFICATION(S): AUTOSAR_SWS_CommunicationStackTypes, AUTOSAR Release 4.3.1 **
**                                                       						 **
**	MAY BE CHANGED BY USER : No                          						 **
**                                                       					     **
***********************************************************************************/
#ifndef COMSTACK_TYPES_H 
#define COMSTACK_TYPES_H


/***********************************************************************************/
/*				    			Include Headers			         				   */
/***********************************************************************************/

#include "Std_Types.h"
#include "ComStack_Cfg.h"


/***********************************************************************************/
/*                      	Private Macro Definitions 			                   */
/***********************************************************************************/

/*	Moudle Version	1.0.0 */
#define COMSTACK_TYPES_SW_MAJOR_VERSION			(0x01u)
#define COMSTACK_TYPES_SW_MINOR_VERSION			(0x00u)
#define COMSTACK_TYPES_SW_PATCH_VERSION			(0x00u)

/* Autosar version 4.3.1 */
#define COMSTACK_TYPES_AR_RELEASE_MAJOR_VERSION	(0x04u)
#define COMSTACK_TYPES_AR_RELEASE_MINOR_VERSION	(0x03u)
#define COMSTACK_TYPES_AR_RELEASE_PATCH_VERSION	(0x01u)


/***********************************************************************************/
/*                      		Types Definition 				                   */
/***********************************************************************************/

/*
	[SWS_COMTYPE_00005]Zero-based integer number The size of this global type depends on 
	the maximum number of PDUs used within one software module.	This parameter shall be 
	generated by the generator tool depending on the value configured in EcuC virtual layer. 
	This parameter shall be generated in ComStack_Cfg.h file. 
*/
/* This type is used within the entire AUTOSAR Com Stack except for bus drivers. */
typedef uint16 PduIdType;

/*
	[SWS_COMTYPE_00008]Zero-based integer number The size of this global type depends on
	the maximum length of PDUs to be sent by an ECU. This parameter shall be generated 
	by the generator tool depending on the value configured in EcuC virtual layer.
	This parameter shall be generated in ComStack_Cfg.h file. 
*/
/* This type shall be used within the entire AUTOSAR Com Stack of an ECU except for bus drivers. */
typedef uint16 PduLengthType;

/* [SWS_COMTYPE_00036]Used to store the identifier of a partial network cluster. */
typedef uint8 PNCHandleType;

/* [SWS_COMTYPE_00038]This Typedefinition shall be used to store the identifier of a communication channel */
typedef uint8 NetworkHandleType;

/* 
   [SWS_COMTYPE_00039] IcomConfigIdType defines the configuration ID. An ID of 0 is the default configuration.
   An ID greater than 0 shall identify a configuration for Pretended Networking.
   There is more than 1 configuration possible
*/	
typedef uint8 IcomConfigIdType;

/*
	[SWS_COMTYPE_00040]IcomSwitch_ErrorType defines the errors which can occur
	when activating or deactivating Pretended Networking.
*/
typedef uint8 IcomSwitch_ErrorType;
#define ICOM_SWITCH_E_OK		((IcomSwitch_ErrorType)0x00)
#define ICOM_SWITCH_E_FAILED	((IcomSwitch_ErrorType)0x01)

/* [SWS_COMTYPE_00031]Specify the parameter to which the value has to be changed (BS or STmin).*/
typedef enum
{
	/* TP_STMIN */
	TP_STMIN = 0x00,
	/* Block Size */ 
	TP_BS 	 = 0x01,
	/* The Band width control parameter used 
	   in FlexRay transport protocol module.*/
	TP_BC	 = 0x02
}TPParameterType;

/* [SWS_COMTYPE_00012] Variables of this type shall be used to store the result of a buffer request */
typedef enum
{
	/* Buffer request accomplished successful. */
	BUFREQ_OK 		 = 0x00,
	/* Buffer request not successful. Buffer cannot be accessed. */
	BUFREQ_E_NOT_OK	 = 0x01,
	/* Temporarily no buffer available. It's up the requester to retry request for a certain time. */
	BUFREQ_E_BUSY    = 0x02,
	/* No Buffer of the required length can be provided. */
	BUFREQ_E_OVFL    = 0x02
}BufReq_ReturnType;

/* [SWS_COMTYPE_00027]Variables of this type shall be used to store the state of TP buffer. */
typedef enum
{
	/* indicates that all data, that have been copied so far, 
	are confirmed and can be removed from the TP buffer.
	Data copied by this API call are excluded and will be confirmed later */
	TP_DATACONF 	 = 0x00,
	/* indicates that this API call shall copyalready copied data in order to recover from an error.
	In this case TxTpDataCnt specifies the offset of the first byte to be copied by the API call. */
	TP_DATARETRY	 = 0x01,
	/* indicates that the previously copied data must remain in the TP. */
	TP_CONFPENDING   = 0x02,
}TpDataStateType;

/*
	[SWS_COMTYPE_00011] Variables of this type shall be used to store the basic information about
	a PDU of any type,namely a pointer variable pointing to its SDU (payload),a pointer to Meta Data 
	of the PDU, and the corresponding length of the SDU in bytes.
*/
typedef struct 
{
	/* Pointer to the SDU (i.e. payload data) of the PDU. The type of this pointer depends on
	the memory model being used at compile time. */
	uint8*		  SduDataPtr;
	
	/* Pointer to the meta data (e.g. CAN ID, socket ID, diagnostic addresses) of the PDU,
	consisting of a sequence of meta data items. The length and type of the meta data items 
	is statically configured for each PDU.Meta data items with more than 8 bits use platform byte order. */
	uint8*		  MetaDataPtr;
	
	/* Length of the SDU in bytes. */
	PduLengthType SduLength;
}PduInfoType;

/*
	[SWS_COMTYPE_00037] Variables of this type shall be used to store the information
	about Tp buffer handling.
*/
typedef struct 
{
	/* The enum type to be used to store the state of Tp buffer */
	TpDataStateType	 TpDataState;
	
	/* Offset from the current position which identifies
	the number of bytes to be retransmitted.  */
	PduLengthType    TxTpDataCnt;
}RetryInfoType;

/***********************************************************************************/
/*                      		Functions Prototype 			                   */
/***********************************************************************************/

#endif /* COMSTACK_TYPES_H */

